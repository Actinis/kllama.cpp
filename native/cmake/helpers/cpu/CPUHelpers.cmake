if (IOS AND NOT CMAKE_SYSTEM_PROCESSOR)
    message(STATUS "Failed to detect CPU arch automatically for iOS, will set it manually to ARM64")
    set(CMAKE_SYSTEM_PROCESSOR "ARM64")
endif ()

if (CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|AMD64|i686")
    set(ARCH_X86 TRUE)
elseif (CMAKE_SYSTEM_PROCESSOR MATCHES "aarch64|ARM64")
    set(ARCH_ARM64 TRUE)
else ()
    message(FATAL_ERROR "Failed to detect CPU architecture: CMAKE_SYSTEM_PROCESSOR=${CMAKE_SYSTEM_PROCESSOR}")
endif ()

if (ARCH_X86)
    include(CheckCXXCompilerFlag)
    # Check for AVX2 support
    check_cxx_compiler_flag("-mavx2" COMPILER_SUPPORTS_AVX2)
    if (COMPILER_SUPPORTS_AVX2)
        set(LLAMA_AVX2 ON CACHE BOOL "Enable AVX2" FORCE)
        message(STATUS "Enabling AVX2 support for llama.cpp build.")
    else ()
        # Fallback to SSE4.1 if AVX2 is not available
        check_cxx_compiler_flag("-msse4.1" COMPILER_SUPPORTS_SSE41)
        if (COMPILER_SUPPORTS_SSE41)
            set(LLAMA_SSE4_1 ON CACHE BOOL "Enable SSE4.1" FORCE)
            message(STATUS "Enabling SSE4.1 support for llama.cpp build (AVX2 not available).")
        else ()
            set(LLAMA_SSE2 ON CACHE BOOL "Enable SSE2" FORCE)
            message(STATUS "Enabling basic SSE2 support for llama.cpp build.")
        endif ()
    endif ()
elseif (ARCH_ARM64)
    # Enable NEON for ARM64
    set(LLAMA_NEON ON CACHE BOOL "Enable NEON" FORCE)
    message(STATUS "Enabling ARM NEON support for llama.cpp build.")
endif ()